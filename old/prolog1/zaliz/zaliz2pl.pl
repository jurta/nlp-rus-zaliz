#!/usr/bin/perl -w
# -*- mode: Perl; coding: cyrillic-koi8; -*-
# $Id$
# Copyright (c) 2000  Juri Linkov <juri@eta.org>
# This file is distributed under the terms of the GNU GPL.

# perl zaliz2pl.pl ~/doc/lang/rus/zaliz/zaliz/zaliz > zaliz.pl

while(<>) {
    chomp; #s/\'/''/g; s/([.,]\d+)+//g;

    $o = $_; $w = $s = $p = "";

    s/^\`друг друга/\`друг_друга/;
    s/^\`всякий /\`всякий 3/;
    s/мо жо/мо-жо/;

    s/^(\S+)\s*//; $w = $1; $w =~ s/^\`//;

    s/^(\S+)\s*//; $s0 = $1;
    if(   $s0 =~ /^(\d+)\.(\d+)\,(\d+)$/) { $s = "u($1,$2,$3,0)"; }
    elsif($s0 =~ /^(\d+)\,(\d+)\.(\d+)$/) { $s = "u($1,0,$2,$3)"; }
    elsif($s0 =~ /^(\d+)\.(\d+)$/       ) { $s = "u($1,$2)"     ; }
    elsif($s0 =~ /^(\d+)\,(\d+)$/       ) { $s = "u($1,0,$2,0)" ; }
    elsif($s0 =~ /^(\d+)$/              ) { $s = "u($1)"        ; }
    else                                  { $s = "u(0)"         ; }

    s/^(\S+)\s*//; $t0 = $1;
    if(   $t0 =~ /^част\.$/      ) { $t = "част"         ; }
    elsif($t0 =~ /^м$/           ) { $t = "м"            ; }
    elsif($t0 =~ /^мо$/          ) { $t = "мо"           ; }
    elsif($t0 =~ /^ж$/           ) { $t = "ж"            ; }
    elsif($t0 =~ /^жо$/          ) { $t = "жо"           ; }
    elsif($t0 =~ /^мо-жо$/       ) { $t = "мо_жо"        ; }
    elsif($t0 =~ /^с$/           ) { $t = "с"            ; }
    elsif($t0 =~ /^со$/          ) { $t = "со"           ; }
    elsif($t0 =~ /^мн\.$/        ) { $t = "мн"           ; }
    elsif($t0 =~ /^п$/           ) { $t = "п"            ; }
    elsif($t0 =~ /^мс$/          ) { $t = "мс"           ; }
    elsif($t0 =~ /^мс-п$/        ) { $t = "мс_п"         ; }
    elsif($t0 =~ /^н$/           ) { $t = "н"            ; }
    elsif($t0 =~ /^союз$/        ) { $t = "союз"         ; }
    elsif($t0 =~ /^предл\.$/     ) { $t = "предл"        ; }
    elsif($t0 =~ /^предик\.$/    ) { $t = "предик"       ; }
    elsif($t0 =~ /^межд\.$/      ) { $t = "межд"         ; }
    elsif($t0 =~ /^вводн\.$/     ) { $t = "вводн"        ; }
    elsif($t0 =~ /^сравн\.$/     ) { $t = "сравн"        ; }
    elsif($t0 =~ /^св$/          ) { $t = "св"           ; }
    elsif($t0 =~ /^нсв$/         ) { $t = "нсв"          ; }
    elsif($t0 =~ /^св-нсв$/      ) { $t = "св_нсв"       ; }
    elsif($t0 =~ /^CARD$/        ) { $t = "card"         ; }
    elsif($t0 =~ /^PRON$/        ) { $t = "pron"         ; }
    elsif($t0 =~ /^INFLEX-N-M$/  ) { $t = "inflex_n_m"   ; }
    elsif($t0 =~ /^INFLEX-N-PLT$/) { $t = "inflex_n_plt" ; }
    elsif($t0 =~ /^N-PLT$/       ) { $t = "n_plt"        ; }
    elsif($t0 =~ /^числ\.$/      ) { $t = "числ"         ; }
    elsif($t0 =~ /^числ\.-п$/    ) { $t = "числ_п"       ; }
    else                           { $t = "unknown"      ; }

    s/^(нп)\s*//; # !!!
    s/^(п)\s*//; # !!!
    if($t eq "мн") { s/^[мжс]\s*//; } # !!!
    if($t eq "п" ) { s/^мс\s*//; } # !!!

    if(s/^((\d+)[a-f*?!~\'\"\d\-]*)\s*//) {
        $p0 = $1; $pp0 = $2; $p0 =~ s/\'/''/g;
    } else { $p0 = ""; $pp0 = "0"; }
    s/^[\$@].*$//; # !!!

#      if($_ ne "") { printf "%-30s: %s\n", $_, $o; }
    print "w('$w',$s,$t,$pp0,'$p0').";
    if($_ ne "") { " %$_" }
    print "\n";

#      print "$word\n";
#      if($p eq "unknown") { print "$p: $p0 : $o\n"; }
#      print "$_\n";

#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s,'$2',g,'$3',p,'']).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s,'$2',g,'$3',p,'$4']).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(.*)$/) { print "w('$1',[s,'$2',g,'$3',p,'']). %1 $4\n"; }
#      elsif(/^(\S+)\s(.*)$/) { print "w('$1',[s,'',g,'',p,'']). %2 $2\n"; }

#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s('$2'),g('$3'),p('')]).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s('$2'),g('$3'),p('$4')]).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(.*)$/) { print "w('$1',[s('$2'),g('$3'),p('')]). %1 $4\n"; }
#      elsif(/^(\S+)\s(.*)$/) { print "w('$1',[s(''),g(''),p('')]). %2 $2\n"; }

#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s:'$2',g:'$3',p:'']).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',[s:'$2',g:'$3',p:'$4']).\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(.*)$/) { print "w('$1',[s:'$2',g:'$3',p:'']). %1 $4\n"; }
#      elsif(/^(\S+)\s(.*)$/) { print "w('$1',[s:'',g:'',p:'']). %2 $2\n"; }

#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w(\"$1\",'$2','$3','').\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(\S+)$/) { print "w(\"$1\",'$2','$3','$4').\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(.*)$/) { print "w(\"$1\",'$2','$3',''). %1 $4\n"; }
#      elsif(/^(\S+)\s(.*)$/) { print "w(\"$1\",'','',''). %2 $2\n"; }

#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w('$1','$2','$3','').\n"; }
#      if(/^(\S+)\s(\S+)\s(\S+)$/) { print "w('$1',$2,'$3','').\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(\S+)$/) { print "w('$1','$2','$3','$4').\n"; }
#      elsif(/^(\S+)\s(\S+)\s(\S+)\s(.*)$/) { print "w('$1','$2','$3',''). %1 $4\n"; }
#      elsif(/^(\S+)\s(.*)$/) { print "w('$1','','',''). %2 $2\n"; }

#      else { print "% $_\n"; }
}
